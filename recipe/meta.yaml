{% set version = "0.19.9" %}

package:
  name: quart
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/q/quart/quart-{{ version }}.tar.gz
  sha256: 30a61a0d7bae1ee13e6e99dc14c929b3c945e372b9445d92d21db053e91e95a5

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  entry_points:
    - quart = quart.cli:main

requirements:
  host:
    - pip
    - poetry-core >=1.0.0
    - python >=3.8
  run:
    - aiofiles
    - blinker >=1.6
    - click >=8.0.0
    - flask >=3.0.0
    - hypercorn >=0.11.2
    - importlib-metadata
    - itsdangerous
    - jinja2
    - markupsafe
    - python >=3.8
    - typing_extensions
    - werkzeug >=3.0.0

test:
  imports:
    - quart
  requires:
    - pip
    - m2-grep  # [win]
  commands:
    - pip check
    - quart --version
    - quart --version | grep -iE "Quart {{ version.replace(".", "\.") }}"

about:
  home: https://github.com/pallets/quart
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: A Python ASGI web microframework with the same API as Flask
  description: |
    Quart is a Python ASGI web microframework. It is intended to provide the easiest way to use
    asyncio functionality in a web context, especially with existing Flask
    apps. This is possible as the Quart API is a superset of the Flask API.
    Quart aims to be a complete web microframework, as it supports
    HTTP/1.1, HTTP/2 and websockets. Quart is very extendable and has a
    number of known extensions and works
    with many of the Flask extensions.
  doc_url: https://quart.palletsprojects.com

extra:
  recipe-maintainers:
    - maxyme
    - dhirschfeld
